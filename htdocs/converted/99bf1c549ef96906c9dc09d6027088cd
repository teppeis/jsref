<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!DOCTYPE html>
<html lang="en-US" dir="ltr" id="developer-mozilla-org" xmlns:fb="http://www.facebook.com/2008/fbml" xmlns:og="http://ogp.me/ns#">


<body id="" class="html-ltr document" role="document">
<!--[if lte IE 8]>
<noscript><div class="global-notice">
<p><strong>Warning:</strong> The Mozilla Developer Network website employs emerging web standards that may not be fully supported in some versions of Microsoft Internet Explorer. You can improve your experience of this website by enabling JavaScript.</p></div></noscript>
<![endif]-->
  

    

      
  
<!-- top toolbar -->




<section class="entry-content">
  <div class="wrap">
    <div id="content-main" class="full">
      <article class="article" role="main" data-current-revision="417167" data-refresh-message="Your changes were merged. However, something else has been edited, so this page will be refreshed to reflect the changes." data-cancel-edit-message="Abort editing in progress? Your unsaved changes will be discarded.">
      <header id="article-head">
        <div class="title entry-title">
            <h1 class="page-title">Function.prototype.call</h1>
                        

            
            
                                </div>
        

        
               </header>

           
                        <div class="warning review-technical"><p>This article is in need of a technical review.</p></div>
                            
            
      <div id="wikiArticle" class="page-content boxed">
                
                                <h2 id="Summary">Summary</h2>
<p>Calls a function with a given <code>this</code> value and arguments provided individually.</p>
<div class="note">
  <strong>NOTE:</strong> While the syntax of this function is almost identical to that of <code><a href="/en-US/docs/JavaScript/Reference/Global_Objects/Function/apply" title="https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/apply">apply()</a></code>, the fundamental difference is that <code>call()</code> accepts an argument list, while <code>apply()</code> accepts a single array of arguments.</div>
<table class="standard-table">
  <thead>
    <tr>
      <th class="header" colspan="2">Method of <a href="/en-US/docs/JavaScript/Reference/Global_Objects/Function" title="https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function">Function</a></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Implemented in</td>
      <td>JavaScript 1.3</td>
    </tr>
    <tr>
      <td>ECMAScript Edition</td>
      <td>ECMAScript 3rd Edition</td>
    </tr>
  </tbody>
</table>
<h2 id="Syntax">Syntax</h2>
<pre class="syntaxbox"><code><em>fun</em>.call(<em>thisArg</em>[, <em>arg1</em>[, <em>arg2</em>[, ...]]])</code></pre>
<h3 id="Parameters">Parameters</h3>
<dl>
  <dt>
    <code>thisArg</code></dt>
  <dd>
    The value of <code>this</code> provided for the call to <em><code>fun</code></em>. Note that this may not be the actual value seen by the method: if the method is a function in <a href="/en-US/docs/JavaScript/Reference/Functions_and_function_scope/Strict_mode" title="JavaScript/Strict mode">non-strict mode</a> code, <code>null</code> and <code>undefined</code> will be replaced with the global object, and primitive values will be boxed.</dd>
  <dt>
    <code>arg1, arg2, ...</code></dt>
  <dd>
    Arguments for the object.</dd>
</dl>
<h2 id="Description">Description</h2>
<p>You can assign a different <code>this</code> object when calling an existing function. <code>this</code> refers to the current object, the calling object.</p>
<p>With <code>call</code>, you can write a method once and then inherit it in another object, without having to rewrite the method for the new object.</p>
<h2 id="Examples">Examples</h2>
<h3 id="Using_call_to_chain_constructors_for_an_object">Using <code>call</code> to chain constructors for an object</h3>
<p>You can use <code>call</code> to chain constructors for an object, similar to Java. In the following example, the constructor for the <code>Product</code> object is defined with two parameters, <code>name</code> and <code>price</code>. Two other functions <code>Food</code> and <code>Toy</code> invoke <code>Product</code> passing <code>this</code> and <code>name</code> and <code>price</code>. Product initializes the properties <code>name</code> and <code>price</code>, both specialized functions define the <code>category</code>.</p>
<pre class="brush: js">function Product(name, price) {
  this.name = name;
  this.price = price;

  if (price &lt; 0)
    throw RangeError('Cannot create product "' + name + '" with a negative price');
  return this;
}

function Food(name, price) {
  Product.call(this, name, price);
  this.category = 'food';
}
Food.prototype = new Product();

function Toy(name, price) {
  Product.call(this, name, price);
  this.category = 'toy';
}
Toy.prototype = new Product();

var cheese = new Food('feta', 5);
var fun = new Toy('robot', 40);
</pre>
<h3 id="Using_call_to_invoke_an_anonymous_function">Using <code>call</code> to invoke an anonymous function</h3>
<p>In this purely constructed example, we create anonymous function and use <code>call</code> to invoke it on every object in an array. The main purpose of the anonymous function here is to add a print function to every object, which is able to print the right index of the object in the array. Passing the object as <code>this</code> value was not strictly necessary, but is done for explanatory purpose.</p>
<pre class="brush: js">var animals = [
  {species: 'Lion', name: 'King'},
  {species: 'Whale', name: 'Fail'}
];

for (var i = 0; i &lt; animals.length; i++) {
  (function (i) { 
    this.print = function () { 
      console.log('#' + i  + ' ' + this.species + ': ' + this.name); 
    } 
    this.print();
  }).call(animals[i], i);
}
</pre>
<h2 id="See_also">See also</h2>
<ul>
  <li><a href="/en-US/docs/JavaScript/Reference/Global_Objects/Function/apply" title="JavaScript/Reference/Global_Objects/Function/apply">apply</a></li>
</ul>
                  </div>
    
    <section class="page-meta">
            <section class="page-tags" id="document-tags">
        <h2><i class="icon-tags"/>Tags (2)</h2>
        <div id="deki-page-tags">
          <ul class="tags tagit ui-widget ui-widget-content">
                        <li class="tagit-choice ui-widget-content ui-state-default">
                <a class="text tagit-label" href="/en-US/docs/tag/JavaScript%20Reference">JavaScript Reference</a>
            </li>
                        <li class="tagit-choice ui-widget-content ui-state-default">
                <a class="text tagit-label" href="/en-US/docs/tag/JavaScript">JavaScript</a>
            </li>
                      </ul>
        </div>
      </section>
      
      
      
      <section id="doc-contributors" role="contentinfo">
        Contributors to this page: <a href="/en-US/profiles/jswisher">jswisher</a>, <a href="/en-US/profiles/ronin712">ronin712</a>, <a href="/en-US/profiles/user01">user01</a>, <a href="/en-US/profiles/evilpie">evilpie</a>, <a href="/en-US/profiles/rwaldron">rwaldron</a>, <a href="/en-US/profiles/jeffozvold">jeffozvold</a>, <a href="/en-US/profiles/Skorney">Skorney</a>, <a href="/en-US/profiles/techlivezheng">techlivezheng</a>, <a href="/en-US/profiles/Sheppy">Sheppy</a>, <a href="/en-US/profiles/CristianTincu">CristianTincu</a>, <a href="/en-US/profiles/kswedberg">kswedberg</a>, <a href="/en-US/profiles/ziyunfei">ziyunfei</a>, <a href="/en-US/profiles/anthonyryan1">anthonyryan1</a>, <a href="/en-US/profiles/Waldo">Waldo</a>, <a href="/en-US/profiles/Inimino">Inimino</a>, <a href="/en-US/profiles/adriaanlabusc">adriaanlabusc</a>, <a href="/en-US/profiles/loopology">loopology</a>, <a href="/en-US/profiles/roydukkey">roydukkey</a>, <a href="/en-US/profiles/thomasburette">thomasburette</a>, <a href="/en-US/profiles/Sdwyer">Sdwyer</a>, <a href="/en-US/profiles/Schorsch">Schorsch</a>, <a href="/en-US/profiles/nobuoka">nobuoka</a>, <a href="/en-US/profiles/ethertank">ethertank</a>, <a href="/en-US/profiles/salty-horse">salty-horse</a>, <a href="/en-US/profiles/Mgjbot">Mgjbot</a>, <a href="/en-US/profiles/Maian">Maian</a>, <a href="/en-US/profiles/Dria">Dria</a>, <a href="/en-US/profiles/liveaa.com">liveaa.com</a>
                          <br/>
          Last updated by:  
          <a href="/en-US/profiles/Sheppy">Sheppy</a>, 
          <time datetime="2013-05-28T08:32:52-07:00">May 28, 2013 8:32:52 AM</time>
                      <br/>
            Last reviewed by:  
            <a href="/en-US/profiles/techlivezheng">techlivezheng</a>, 
            <time datetime="2013-04-06T06:03:41-07:00">Apr 6, 2013 6:03:41 AM</time>
                        </section>
    </section>
  </article>
  <form id="wiki-page-edit" class="editing" method="post" action="/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call$edit">
      <input type="hidden" name="form" id="form" value="rev"/>
      <input type="hidden" name="content" value="" class="entry-content"/>
  </form>
      </div>
   </div>
    </section>  


<section id="footbar">
<div class="wrap">
  <p>
  Is MDN helpful to you? Please <a href="/en-US/docs/Project:Feedback">share your feedback</a> with us. Or join our <a id="dev-mdc-link" href="//lists.mozilla.org/listinfo/dev-mdc">mailing list about improving MDN content</a>.  </p>
</div>
</section>




          
      
      
      
              
                  
  
  
      

    <!-- include syntax highlighting scripts -->
<link rel="stylesheet" media="screen,projection,tv" href="https://developer.cdn.mozilla.net/media/css/syntax-prism-min.css?build=aa6c00e"/>


        
    


</body>
</html>
