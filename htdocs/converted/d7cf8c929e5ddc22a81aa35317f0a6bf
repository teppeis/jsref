<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!DOCTYPE html>
<html lang="en-US" dir="ltr" id="developer-mozilla-org" xmlns:fb="http://www.facebook.com/2008/fbml" xmlns:og="http://ogp.me/ns#">


<body id="" class="html-ltr document" role="document">
<!--[if lte IE 8]>
<noscript><div class="global-notice">
<p><strong>Warning:</strong> The Mozilla Developer Network website employs emerging web standards that may not be fully supported in some versions of Microsoft Internet Explorer. You can improve your experience of this website by enabling JavaScript.</p></div></noscript>
<![endif]-->
  

    

      
  
<!-- top toolbar -->




<section class="entry-content">
  <div class="wrap">
    <div id="content-main" class="full">
      <article class="article" role="main" data-current-revision="423161" data-refresh-message="Your changes were merged. However, something else has been edited, so this page will be refreshed to reflect the changes." data-cancel-edit-message="Abort editing in progress? Your unsaved changes will be discarded.">
      <header id="article-head">
        <div class="title entry-title">
            <h1 class="page-title">parseInt</h1>
                        

            
            
                                </div>
        

        
               </header>

           
                        <div class="warning review-technical"><p>This article is in need of a technical review.</p></div>
                            
            
      <div id="wikiArticle" class="page-content boxed">
                
                                <h2 id="Summary" name="Summary">Summary</h2>
<p>Parses a string argument and returns an integer of the specified radix or base.</p>
<table class="standard-table">
  <thead>
    <tr>
      <th class="header" colspan="2">Core Global Method</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Implemented in</td>
      <td>JavaScript ?</td>
    </tr>
    <tr>
      <td>ECMAScript Edition</td>
      <td>ECMAScript ?</td>
    </tr>
  </tbody>
</table>
<h2 id="Syntax" name="Syntax">Syntax</h2>
<pre class="syntaxbox">var num = parseInt(<em>string</em>, <em>radix</em>);</pre>
<h2 id="Parameters" name="Parameters">Parameters</h2>
<dl>
  <dt>
    <code>string</code></dt>
  <dd>
    The value to parse. If <code>string</code> is not a string, then it is converted to one. Leading whitespace in the string is ignored.</dd>
</dl>
<dl>
  <dt>
    <code>radix</code></dt>
  <dd>
    An integer that represents the <var>radix</var> of the above mentioned string. <strong>Always specify this parameter</strong> to eliminate reader confusion and to guarantee predictable behavior. Different implementations produce different results when a radix is not specified.</dd>
</dl>
<h2 id="Description" name="Description">Description</h2>
<p>The <code>parseInt</code> function converts its first argument to a string, parses it, and returns an integer or <code>NaN</code>. If not <code>NaN</code>, the returned value will be the decimal integer representation of the first argument taken as a number in the specified <var>radix</var> (base). For example, a <var>radix</var> of 10 indicates to convert from a decimal number, 8 octal, 16 hexadecimal, and so on. For radices above <code>10</code>, the letters of the alphabet indicate numerals greater than <code>9</code>. For example, for hexadecimal numbers (base 16), <code>A</code> through <code>F</code> are used.</p>
<p>If <code>parseInt</code> encounters a character that is not a numeral in the specified radix, it ignores it and all succeeding characters and returns the integer value parsed up to that point. <code>parseInt</code> truncates numbers to integer values. Leading and trailing spaces are allowed.</p>
<p>If <var>radix</var> is <code>undefined</code> or 0 (or absent), JavaScript assumes the following:</p>
<ul>
  <li>If the input <code>string</code> begins with "0x" or "0X", <var>radix</var> is 16 (hexadecimal) and the remainder of the string is parsed.</li>
  <li>If the input <code>string</code> begins with "0", <var>radix</var> is eight (octal) or 10 (decimal).  Exactly which radix is chosen is implementation-dependent.  ECMAScript 5 specifies that 10 (decimal) is used, but not all browsers support this yet.  For this reason <strong>always specify a radix when using <code>parseInt</code></strong>.</li>
  <li>If the input <code>string</code> begins with any other value, the radix is 10 (decimal).</li>
</ul>
<p>If the first character cannot be converted to a number, <code>parseInt</code> returns <code>NaN</code>.</p>
<p>For arithmetic purposes, the <code>NaN</code> value is not a number in any radix. You can call the <code><a href="/en-US/docs/JavaScript/Reference/Global_Objects/isNaN" title="en-US/docs/Core_JavaScript_1.5_Reference/Global_Functions/isNaN">isNaN</a></code> function to determine if the result of <code>parseInt</code> is <code>NaN</code>. If <code>NaN</code> is passed on to arithmetic operations, the operation results will also be <code>NaN</code>.</p>
<p>To convert number to its string literal in a particular radix use <code>intValue.toString(radix)</code>.</p>
<h2 id="Examples" name="Examples">Examples</h2>
<h3 id="Example:_Using_parseInt" name="Example:_Using_parseInt">Example: Using <code>parseInt</code></h3>
<p>The following examples all return <code>15</code>:</p>
<pre>parseInt(" 0xF", 16);
parseInt(" F", 16);
parseInt("17", 8);
parseInt(021, 8);
parseInt("015", 10);
parseInt(15.99, 10);
parseInt("FXX123", 16);
parseInt("1111", 2);
parseInt("15*3", 10);
parseInt("15e2", 10);
parseInt("15px", 10);
parseInt("12", 13);
</pre>
<p>The following examples all return <code>NaN</code>:</p>
<pre>parseInt("Hello", 8); // Not a number at all
parseInt("546", 2);   // Digits are not valid for binary representations
</pre>
<p>The following examples all return <code>-15</code>:</p>
<pre>parseInt("-F", 16);
parseInt("-0F", 16);
parseInt("-0XF", 16);
parseInt(-15.1, 10)
parseInt(" -17", 8);
parseInt(" -15", 10);
parseInt("-1111", 2);
parseInt("-15e1", 10);
parseInt("-12", 13);
</pre>
<p>The following example returns <code>224</code>:</p>
<pre>parseInt("0e0", 16);
</pre>
<h2 id="Octal_Interpretations_with_No_Radix">Octal Interpretations with No Radix</h2>
<p>Although discouraged by ECMAScript 3 and forbidden by ECMAScript 5, many implementations interpret a numeric string beginning with a leading <code>0</code> as octal. The following may have an octal result, or it may have a decimal result.  <strong>Always specify a radix to avoid this unreliable behavior.</strong></p>
<pre>parseInt("0e0"); // 0
parseInt("08"); // 0, '8' is not an octal digit.
</pre>
<h3 id="ECMAScript_5_Removes_Octal_Interpretation">ECMAScript 5 Removes Octal Interpretation</h3>
<p>The ECMAScript 5 specification of the function <code>parseInt</code> no longer allows implementations to treat Strings beginning with a <code>0</code> character as octal values. ECMAScript 5 states:</p>
<p>The <code>parseInt</code> function produces an integer value dictated by interpretation of the contents of the string argument according to the specified radix. Leading white space in string is ignored. If radix is undefined or <code>0</code>, it is assumed to be <code>10</code> except when the number begins with the character pairs <code>0x</code> or <code>0X</code>, in which case a radix of 16 is assumed. If radix is <code>16</code>, number may also optionally begin with the character pairs <code>0x</code> or <code>0X</code>.</p>
<p>This differs from ECMAScript 3, which discouraged but allowed octal interpretation.</p>
<p>Many implementations have not adopted this behavior as of 2013, and because older browsers must be supported, <strong>always specify a radix</strong>.</p>
<h3 id="A_stricter_parse_function">A stricter parse function</h3>
<p>It is sometime usefull to have a stricter way to parse int values, regular expressions can help :</p>
<pre class="brush: js">filterInt = function (value)
	{
	if(/^\-?([0-9]+|Infinity)$/.test(value))
		return Number(value);
	return NaN;
	}
console.log(filterInt('421'));
// 421
console.log(filterInt('-421'));
// -421
console.log(filterInt('Infinity'));
// Infinity
console.log(filterInt('421e+0'));
// NaN
console.log(filterInt('421hop'));
// NaN
console.log(filterInt('hop1.61803398875'));
// NaN
console.log(filterInt('1.61803398875'));
// NaN
</pre>
<h2 id="See_also" name="See_also">See also</h2>
<p><a href="/en-US/docs/JavaScript/Reference/Global_Objects/isNaN" title="en-US/docs/JavaScript/Reference/Global_Functions/isNaN">isNaN</a>, <a href="/en-US/docs/JavaScript/Reference/Global_Objects/parseFloat" title="en-US/docs/JavaScript/Reference/Global_Functions/parseFloat">parseFloat</a>, <a href="/en-US/docs/JavaScript/Reference/Global_Objects/Object/valueOf" title="en-US/docs/JavaScript/Reference/Global_Objects/Object/valueOf">Object.valueOf</a>, <a href="/en-US/docs/JavaScript/Reference/Global_Objects/Number/toString" title="en-US/docs/JavaScript/Reference/Global_Objects/Number/toString">Number.toString</a></p>
                  </div>
    
    <section class="page-meta">
            <section class="page-tags" id="document-tags">
        <h2><i class="icon-tags"/>Tags (2)</h2>
        <div id="deki-page-tags">
          <ul class="tags tagit ui-widget ui-widget-content">
                        <li class="tagit-choice ui-widget-content ui-state-default">
                <a class="text tagit-label" href="/en-US/docs/tag/JavaScript%20Reference">JavaScript Reference</a>
            </li>
                        <li class="tagit-choice ui-widget-content ui-state-default">
                <a class="text tagit-label" href="/en-US/docs/tag/JavaScript">JavaScript</a>
            </li>
                      </ul>
        </div>
      </section>
      
      
      
      <section id="doc-contributors" role="contentinfo">
        Contributors to this page: <a href="/en-US/profiles/Adamite">Adamite</a>, <a href="/en-US/profiles/Laptopman">Laptopman</a>, <a href="/en-US/profiles/royling">royling</a>, <a href="/en-US/profiles/Sheppy">Sheppy</a>, <a href="/en-US/profiles/Yaroukh">Yaroukh</a>, <a href="/en-US/profiles/ethertank">ethertank</a>, <a href="/en-US/profiles/williamr">williamr</a>, <a href="/en-US/profiles/Markus%20Prokott">Markus Prokott</a>, <a href="/en-US/profiles/evilpie">evilpie</a>, <a href="/en-US/profiles/Nfroidure">Nfroidure</a>, <a href="/en-US/profiles/Waldo">Waldo</a>, <a href="/en-US/profiles/Mgjbot">Mgjbot</a>, <a href="/en-US/profiles/Ptak82">Ptak82</a>, <a href="/en-US/profiles/Stoyan">Stoyan</a>, <a href="/en-US/profiles/Dhtmlkitchen@gmail.com">Dhtmlkitchen@gmail.com</a>, <a href="/en-US/profiles/Maian">Maian</a>, <a href="/en-US/profiles/Dria">Dria</a>
                          <br/>
          Last updated by:  
          <a href="/en-US/profiles/williamr">williamr</a>, 
          <time datetime="2013-06-01T16:17:46-07:00">Jun 1, 2013 4:17:46 PM</time>
                      <br/>
            Last reviewed by:  
            <a href="/en-US/profiles/williamr">williamr</a>, 
            <time datetime="2013-06-01T16:17:46-07:00">Jun 1, 2013 4:17:46 PM</time>
                        </section>
    </section>
  </article>
  <form id="wiki-page-edit" class="editing" method="post" action="/en-US/docs/Web/JavaScript/Reference/Global_Objects/parseInt$edit">
      <input type="hidden" name="form" id="form" value="rev"/>
      <input type="hidden" name="content" value="" class="entry-content"/>
  </form>
      </div>
   </div>
    </section>  


<section id="footbar">
<div class="wrap">
  <p>
  Is MDN helpful to you? Please <a href="/en-US/docs/Project:Feedback">share your feedback</a> with us. Or join our <a id="dev-mdc-link" href="//lists.mozilla.org/listinfo/dev-mdc">mailing list about improving MDN content</a>.  </p>
</div>
</section>




          
      
      
      
              
                  
  
  
      

    <!-- include syntax highlighting scripts -->
<link rel="stylesheet" media="screen,projection,tv" href="https://developer.cdn.mozilla.net/media/css/syntax-prism-min.css?build=aa6c00e"/>


        
    


</body>
</html>
